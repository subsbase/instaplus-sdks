/*
 * InstaPlus.Api
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.61
 *
 * Do not edit the class manually.
 *
 */
import ApiClient from "../ApiClient";

/**
* TransactionReceipt service.
* @module api/TransactionReceiptApi
* @version 1.0
*/
export default class TransactionReceiptApi {

    /**
    * Constructs a new TransactionReceiptApi. 
    * @alias module:api/TransactionReceiptApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instanc
    e} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }

    /**
     * Callback function to receive the result of the transactionReceiptGet operation.
     * @callback moduleapi/TransactionReceiptApi~transactionReceiptGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/TransactionReceiptApi~transactionReceiptGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    transactionReceiptGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/transaction-receipt', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the transactionReceiptLiveGet operation.
     * @callback moduleapi/TransactionReceiptApi~transactionReceiptLiveGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/TransactionReceiptApi~transactionReceiptLiveGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    transactionReceiptLiveGet(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/transaction-receipt/live', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the transactionReceiptPut operation.
     * @callback moduleapi/TransactionReceiptApi~transactionReceiptPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:api/TransactionReceiptApi~transactionReceiptPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    transactionReceiptPut(callback) {
      
      let postBody = null;

      let pathParams = {
        
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/transaction-receipt', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
    /**
     * Callback function to receive the result of the transactionReceiptReferenceGet operation.
     * @callback moduleapi/TransactionReceiptApi~transactionReceiptReferenceGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} reference 
     * @param {module:api/TransactionReceiptApi~transactionReceiptReferenceGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    transactionReceiptReferenceGet(reference, callback) {
      
      let postBody = null;
      // verify the required parameter 'reference' is set
      if (reference === undefined || reference === null) {
        throw new Error("Missing the required parameter 'reference' when calling transactionReceiptReferenceGet");
      }

      let pathParams = {
        'reference': reference
      };
      let queryParams = {
        
      };
      let headerParams = {
        
      };
      let formParams = {
        
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/transaction-receipt/{reference}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

}